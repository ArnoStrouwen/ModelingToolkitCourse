var documenterSearchIndex = {"docs":
[{"location":"lectures/lecture2/#Lecture-2:-Developing-high-fidelity-models-of-hydraulic-systems","page":"Lecture 2: Developing high-fidelity models of hydraulic systems","title":"Lecture 2: Developing high-fidelity models of hydraulic systems","text":"","category":"section"},{"location":"#ModelingToolkit-Course","page":"Home","title":"ModelingToolkit Course","text":"","category":"section"},{"location":"lectures/lecture1/#Lecture-1:-Introduction-to-acausal-modeling-for-physical-systems-with-ModelingToolkit.jl","page":"Lecture 1: Introduction to acausal modeling for physical systems with ModelingToolkit.jl","title":"Lecture 1: Introduction to acausal modeling for physical systems with ModelingToolkit.jl","text":"","category":"section"},{"location":"lectures/lecture1/#Background","page":"Lecture 1: Introduction to acausal modeling for physical systems with ModelingToolkit.jl","title":"Background","text":"","category":"section"},{"location":"lectures/lecture1/#Julia","page":"Lecture 1: Introduction to acausal modeling for physical systems with ModelingToolkit.jl","title":"Julia","text":"","category":"section"},{"location":"lectures/lecture1/","page":"Lecture 1: Introduction to acausal modeling for physical systems with ModelingToolkit.jl","title":"Lecture 1: Introduction to acausal modeling for physical systems with ModelingToolkit.jl","text":"This course will use Julia as the fundamental tool to solve numerical problems.  ModelingToolkit.jl is a package writen in pure Julia and leverages the fundamental technologies of symbolic math from Symbolics.jl, numerical solvers from DifferentialEquations.jl, and automatic differentiation from ForwardDiff.jl.  To demonstrate an introduction to these technologeies, lets focus on one of the most fundamental engineering problems: the mass-spring-damper.  For now, let's leave the mass out of the system to avoid the 2nd derivative term","category":"page"},{"location":"lectures/lecture1/","page":"Lecture 1: Introduction to acausal modeling for physical systems with ModelingToolkit.jl","title":"Lecture 1: Introduction to acausal modeling for physical systems with ModelingToolkit.jl","text":"(Image: )","category":"page"},{"location":"lectures/lecture1/","page":"Lecture 1: Introduction to acausal modeling for physical systems with ModelingToolkit.jl","title":"Lecture 1: Introduction to acausal modeling for physical systems with ModelingToolkit.jl","text":"This system can be represented by the ordinary differential equation (ODE):","category":"page"},{"location":"lectures/lecture1/","page":"Lecture 1: Introduction to acausal modeling for physical systems with ModelingToolkit.jl","title":"Lecture 1: Introduction to acausal modeling for physical systems with ModelingToolkit.jl","text":"d*dotx + k*x = F","category":"page"},{"location":"lectures/lecture1/","page":"Lecture 1: Introduction to acausal modeling for physical systems with ModelingToolkit.jl","title":"Lecture 1: Introduction to acausal modeling for physical systems with ModelingToolkit.jl","text":"To solve this in Julia we can apply finite differencing dotx_i = fracx_i - x_i-1Delta t and Newton's method.  Here we solve for the first time step...","category":"page"},{"location":"lectures/lecture1/","page":"Lecture 1: Introduction to acausal modeling for physical systems with ModelingToolkit.jl","title":"Lecture 1: Introduction to acausal modeling for physical systems with ModelingToolkit.jl","text":"using ForwardDiff\nusing Plots\n\nd=1\nk=1000\nΔt=1e-3\nF = 100\n\nfunction f(xᵢ, xᵢ₋₁)\n\n    ẋᵢ = (xᵢ - xᵢ₋₁)/Δt\n    lhs = d*ẋᵢ + k*xᵢ^1.5\n    rhs = F\n\n    return lhs - rhs\nend\n\n# Newton's Method\n# first time step (i=2)\nxᵢ₋₁ = 0.0\nxᵢ = xᵢ₋₁ #<-- guess\ng(xᵢ) = f(xᵢ, xᵢ₋₁)\nxᵢ -= g(xᵢ)/ForwardDiff.derivative(g, xᵢ)\nxᵢ -= g(xᵢ)/ForwardDiff.derivative(g, xᵢ)\nxᵢ -= g(xᵢ)/ForwardDiff.derivative(g, xᵢ)","category":"page"},{"location":"lectures/lecture1/","page":"Lecture 1: Introduction to acausal modeling for physical systems with ModelingToolkit.jl","title":"Lecture 1: Introduction to acausal modeling for physical systems with ModelingToolkit.jl","text":"Note that we can get the derivative for f from automatic differentiation using ForwardDiff.derivative (or using ForwardDiff.jacobian for a system of equations).  To solve for a series of time steps, we can simply update x and run again for each time step Δt.  ","category":"page"},{"location":"lectures/lecture1/","page":"Lecture 1: Introduction to acausal modeling for physical systems with ModelingToolkit.jl","title":"Lecture 1: Introduction to acausal modeling for physical systems with ModelingToolkit.jl","text":"tol = 1e-3\nx = zeros(10)\nfor i=2:10\n    g(xᵢ) = f(xᵢ, x[i-1])\n    Δx = Inf\n    while abs(Δx) > tol\n        Δx = g(x[i])/ForwardDiff.derivative(g, x[i]) \n        x[i] -= Δx\n    end\nend\n\nplot(x; ylabel=\"x [m]\", xlabel=\"time step\")","category":"page"},{"location":"lectures/lecture1/#DifferentialEquations.jl","page":"Lecture 1: Introduction to acausal modeling for physical systems with ModelingToolkit.jl","title":"DifferentialEquations.jl","text":"","category":"section"},{"location":"lectures/lecture1/","page":"Lecture 1: Introduction to acausal modeling for physical systems with ModelingToolkit.jl","title":"Lecture 1: Introduction to acausal modeling for physical systems with ModelingToolkit.jl","text":"For this simple problem it's easy enough to implement the Newton method and solve directly, however it's possible to instead use the solvers from DifferentialEquations.jl.  To do this, we simply need to defined a NonlinearProblem by supplying the function f of the form f(up) where:","category":"page"},{"location":"lectures/lecture1/","page":"Lecture 1: Introduction to acausal modeling for physical systems with ModelingToolkit.jl","title":"Lecture 1: Introduction to acausal modeling for physical systems with ModelingToolkit.jl","text":"u\nis the variable (scalar or vector)\np\nis the parameters (scalar or vector)","category":"page"},{"location":"lectures/lecture1/","page":"Lecture 1: Introduction to acausal modeling for physical systems with ModelingToolkit.jl","title":"Lecture 1: Introduction to acausal modeling for physical systems with ModelingToolkit.jl","text":"In this case u and p corespond to xᵢ and xᵢ₋₁, respectfully.  This is refered to as the \"out-of-place\" form, where each call to f allocates, it is also possible to define f(duup) in \"in-place\" form that gives du as a pre-allocated memory space to mutate.  ","category":"page"},{"location":"lectures/lecture1/","page":"Lecture 1: Introduction to acausal modeling for physical systems with ModelingToolkit.jl","title":"Lecture 1: Introduction to acausal modeling for physical systems with ModelingToolkit.jl","text":"Then we can solve by specifying the method, in this case we specify NewtonRaphson to implement the same algorithm.","category":"page"},{"location":"lectures/lecture1/","page":"Lecture 1: Introduction to acausal modeling for physical systems with ModelingToolkit.jl","title":"Lecture 1: Introduction to acausal modeling for physical systems with ModelingToolkit.jl","text":"using DifferentialEquations\n\nprob = NonlinearProblem(f, 0.0, 0.0)\nsol=solve(prob, NewtonRaphson(); abstol=tol)","category":"page"},{"location":"lectures/lecture1/","page":"Lecture 1: Introduction to acausal modeling for physical systems with ModelingToolkit.jl","title":"Lecture 1: Introduction to acausal modeling for physical systems with ModelingToolkit.jl","text":"Note:  we get exactly the same result for the first time step.","category":"page"},{"location":"lectures/lecture1/","page":"Lecture 1: Introduction to acausal modeling for physical systems with ModelingToolkit.jl","title":"Lecture 1: Introduction to acausal modeling for physical systems with ModelingToolkit.jl","text":"TODO: now show how to use remake to solve for a series of time steps.","category":"page"},{"location":"lectures/lecture1/#Symbolics.jl","page":"Lecture 1: Introduction to acausal modeling for physical systems with ModelingToolkit.jl","title":"Symbolics.jl","text":"","category":"section"},{"location":"lectures/lecture1/","page":"Lecture 1: Introduction to acausal modeling for physical systems with ModelingToolkit.jl","title":"Lecture 1: Introduction to acausal modeling for physical systems with ModelingToolkit.jl","text":"Use Symbolics to build the function\nintroduce @variables","category":"page"},{"location":"lectures/lecture1/#ModelingToolkit.jl","page":"Lecture 1: Introduction to acausal modeling for physical systems with ModelingToolkit.jl","title":"ModelingToolkit.jl","text":"","category":"section"},{"location":"lectures/lecture1/#Solving-a-system-of-equations-(NonlinearSystem)","page":"Lecture 1: Introduction to acausal modeling for physical systems with ModelingToolkit.jl","title":"Solving a system of equations (NonlinearSystem)","text":"","category":"section"},{"location":"lectures/lecture1/","page":"Lecture 1: Introduction to acausal modeling for physical systems with ModelingToolkit.jl","title":"Lecture 1: Introduction to acausal modeling for physical systems with ModelingToolkit.jl","text":"Use ModelingToolkit to solve the problem\nintroduce @parameters\nshow the f function\nshow the jacobian\nintroduce equations, defaults, and how to setup initial conditions and parameters","category":"page"},{"location":"lectures/lecture1/#Using-structural_simplify()","page":"Lecture 1: Introduction to acausal modeling for physical systems with ModelingToolkit.jl","title":"Using structural_simplify()","text":"","category":"section"},{"location":"lectures/lecture1/","page":"Lecture 1: Introduction to acausal modeling for physical systems with ModelingToolkit.jl","title":"Lecture 1: Introduction to acausal modeling for physical systems with ModelingToolkit.jl","text":"demonstrate the problem simplificaiton","category":"page"},{"location":"lectures/lecture1/#[Practice-Problem]","page":"Lecture 1: Introduction to acausal modeling for physical systems with ModelingToolkit.jl","title":"[Practice Problem]","text":"","category":"section"},{"location":"lectures/lecture1/","page":"Lecture 1: Introduction to acausal modeling for physical systems with ModelingToolkit.jl","title":"Lecture 1: Introduction to acausal modeling for physical systems with ModelingToolkit.jl","text":"introduce remake\nplot a solution set (do something that errors once the initial conditions are not defaulted correctly)","category":"page"},{"location":"lectures/lecture1/#Introducing-Time:-ODE's,-DAE's-(ODESystem)","page":"Lecture 1: Introduction to acausal modeling for physical systems with ModelingToolkit.jl","title":"Introducing Time: ODE's, DAE's (ODESystem)","text":"","category":"section"},{"location":"lectures/lecture1/","page":"Lecture 1: Introduction to acausal modeling for physical systems with ModelingToolkit.jl","title":"Lecture 1: Introduction to acausal modeling for physical systems with ModelingToolkit.jl","text":"explain Differential\nexplain Mass Matrix","category":"page"},{"location":"lectures/lecture1/#Acausal-Component-Based-Modeling","page":"Lecture 1: Introduction to acausal modeling for physical systems with ModelingToolkit.jl","title":"Acausal - Component Based Modeling","text":"","category":"section"},{"location":"lectures/lecture1/#Connections","page":"Lecture 1: Introduction to acausal modeling for physical systems with ModelingToolkit.jl","title":"Connections","text":"","category":"section"},{"location":"lectures/lecture1/","page":"Lecture 1: Introduction to acausal modeling for physical systems with ModelingToolkit.jl","title":"Lecture 1: Introduction to acausal modeling for physical systems with ModelingToolkit.jl","text":"demonstrate the theory of connections\nTODO: reference to where nodal network modeling originated?\nthru variables sum\naccross variables are equal\nQuestion: does the across variable have to be velocity?  Could it be any other derivative?","category":"page"},{"location":"lectures/lecture1/#Components","page":"Lecture 1: Introduction to acausal modeling for physical systems with ModelingToolkit.jl","title":"Components","text":"","category":"section"},{"location":"lectures/lecture1/","page":"Lecture 1: Introduction to acausal modeling for physical systems with ModelingToolkit.jl","title":"Lecture 1: Introduction to acausal modeling for physical systems with ModelingToolkit.jl","text":"demonstrate how components are defined\nbest practices","category":"page"},{"location":"lectures/lecture1/#[Practice-Problem]-2","page":"Lecture 1: Introduction to acausal modeling for physical systems with ModelingToolkit.jl","title":"[Practice Problem]","text":"","category":"section"},{"location":"lectures/lecture1/","page":"Lecture 1: Introduction to acausal modeling for physical systems with ModelingToolkit.jl","title":"Lecture 1: Introduction to acausal modeling for physical systems with ModelingToolkit.jl","text":"solve the simple 2 component systems shown in connections help page","category":"page"},{"location":"lectures/lecture1/#Systems-and-Sub-Systems","page":"Lecture 1: Introduction to acausal modeling for physical systems with ModelingToolkit.jl","title":"Systems and Sub-Systems","text":"","category":"section"},{"location":"lectures/lecture1/","page":"Lecture 1: Introduction to acausal modeling for physical systems with ModelingToolkit.jl","title":"Lecture 1: Introduction to acausal modeling for physical systems with ModelingToolkit.jl","text":"how to expose ports and create hierarchy","category":"page"}]
}
